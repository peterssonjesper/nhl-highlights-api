commit 62ba7926b9089a987da0fbd42e07dd9c21d3cc33
Author: Jesper Petersson <jesper@jpetersson.se>
Date:   Sat Oct 19 23:00:47 2013 +0200

    The app can now be deployed

diff --git a/Gemfile b/Gemfile
index 728cf4c..91722c2 100644
--- a/Gemfile
+++ b/Gemfile
@@ -5,3 +5,4 @@ gem 'json'
 gem 'redis'
 gem 'httpclient'
 gem 'xml-simple'
+gem 'unicorn'
diff --git a/Gemfile.lock b/Gemfile.lock
index feef3e8..d09867c 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -1,17 +1,23 @@
 GEM
   remote: https://rubygems.org/
   specs:
-    httpclient (2.3.3)
-    json (1.8.0)
+    httpclient (2.3.4.1)
+    json (1.8.1)
+    kgio (2.8.1)
     rack (1.5.2)
     rack-protection (1.5.0)
       rack
-    redis (3.0.2)
+    raindrops (0.12.0)
+    redis (3.0.5)
     sinatra (1.4.3)
       rack (~> 1.4)
       rack-protection (~> 1.4)
       tilt (~> 1.3, >= 1.3.4)
     tilt (1.4.1)
+    unicorn (4.6.3)
+      kgio (~> 2.6)
+      rack
+      raindrops (~> 0.7)
     xml-simple (1.1.2)
 
 PLATFORMS
@@ -22,4 +28,5 @@ DEPENDENCIES
   json
   redis
   sinatra
+  unicorn
   xml-simple
diff --git a/api.rb b/api.rb
index e1bd28d..5aedcff 100644
--- a/api.rb
+++ b/api.rb
@@ -1,5 +1,3 @@
-require 'bundler/setup'
-
 require 'date'
 require 'sinatra'
 require 'json'
@@ -9,60 +7,64 @@ require_relative 'redis_connection'
 IMAGE_BASE_URL = "http://nhl.cdnllnwnl.neulion.net/u/"
 DAYS_TO_SHOW = 7
 
-get '/' do
-    erb :index
-end
-
-get '/games' do
-    today = Date.today
-    dates = {}
-    ((today-DAYS_TO_SHOW+1)..today).each do |day|
-        games = get_games(day)
-        dates[day.to_s] = games.map { |g| parse_game(g) }
+class Api < Sinatra::Base
+    
+    get '/' do
+        erb :index
     end
-
-    dates.to_json
-end
-
-def get_games(day)
-    cache_key = day.to_s
-    games = redis.get(cache_key)
-    if games.nil?
-        []
-    else
-        JSON::parse(games)
+    
+    get '/games' do
+        today = Date.today
+        dates = {}
+        ((today-DAYS_TO_SHOW+1)..today).each do |day|
+            games = get_games(day)
+            dates[day.to_s] = games.map { |g| parse_game(g) }
+        end
+    
+        dates.to_json
     end
-end
-
-def parse_game(game)
-    {
-        state: game['game-state'].first,
-        away_team: parse_team(game['away-team'].first),
-        home_team: parse_team(game['home-team'].first),
-        goals: {
-            away: game['away-team'].first['goals'].first,
-            home: game['home-team'].first['goals'].first
-        },
-        highlights: {
-            url: game['video']['publishPoint'],
-            description: game['video']['description'],
-            duration: game['video']['runtime'],
-            snapshot: {
-                small: "#{IMAGE_BASE_URL}#{game['video']['image']}",
-                big: "#{IMAGE_BASE_URL}#{game['video']['bigImage']}"
+    
+    def get_games(day)
+        cache_key = day.to_s
+        games = redis.get(cache_key)
+        if games.nil?
+            []
+        else
+            JSON::parse(games)
+        end
+    end
+    
+    def parse_game(game)
+        {
+            state: game['game-state'].first,
+            away_team: parse_team(game['away-team'].first),
+            home_team: parse_team(game['home-team'].first),
+            goals: {
+                away: game['away-team'].first['goals'].first,
+                home: game['home-team'].first['goals'].first
+            },
+            highlights: {
+                url: game['video']['publishPoint'],
+                description: game['video']['description'],
+                duration: game['video']['runtime'],
+                snapshot: {
+                    small: "#{IMAGE_BASE_URL}#{game['video']['image']}",
+                    big: "#{IMAGE_BASE_URL}#{game['video']['bigImage']}"
+                }
             }
         }
-    }
-end
-
-def parse_team(team)
-    {
-        name: team['name'].first,
-        city: team['city'].first,
-        short: team['team-abbreviation'].first,
-        logo: {
-            small: team['logo-25px'].first,
-            big: team['logo-100px'].first
+    end
+    
+    def parse_team(team)
+        {
+            name: team['name'].first,
+            city: team['city'].first,
+            short: team['team-abbreviation'].first,
+            logo: {
+                small: team['logo-25px'].first,
+                big: team['logo-100px'].first
+            }
         }
-    }
+    end
+
 end
diff --git a/config.ru b/config.ru
new file mode 100644
index 0000000..c825acd
--- /dev/null
+++ b/config.ru
@@ -0,0 +1,6 @@
+require "rubygems"
+require 'bundler/setup'
+
+require File.expand_path '../api.rb', __FILE__
+
+run Api
diff --git a/deploy.sh b/deploy.sh
index 590a2ef..acb4146 100755
--- a/deploy.sh
+++ b/deploy.sh
@@ -1,5 +1,12 @@
 #!/bin/bash
+
 bundle install --path vendor/bundle
 mv /var/www/nhl.jpetersson.se/api /var/www/nhl.jpetersson.se/api.old
 mv `pwd` /var/www/nhl.jpetersson.se/api
 rm -rf /var/www/nhl.jpetersson.se/api.old
+
+cd /var/www/nhl.jpetersson.se/api
+mkdir tmp
+mkdir tmp/sockets
+mkdir tmp/pids
+mkdir log
diff --git a/unicorn.rb b/unicorn.rb
new file mode 100644
index 0000000..0008d94
--- /dev/null
+++ b/unicorn.rb
@@ -0,0 +1,12 @@
+@dir = "/var/www/nhl.jpetersson.se/api"
+
+worker_processes 8
+working_directory @dir
+
+timeout 30
+
+listen "#{@dir}/tmp/sockets/.unicorn.sock", :backlog => 64
+pid "#{@dir}/tmp/pids/unicorn.pid"
+
+stderr_path "#{@dir}/log/unicorn.stderr.log"
+stdout_path "#{@dir}/log/unicorn.stdout.log"
